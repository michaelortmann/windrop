diff -ru unbound-1.17.1.orig/services/listen_dnsport.c unbound-1.17.1/services/listen_dnsport.c
--- unbound-1.17.1.orig/services/listen_dnsport.c	2023-01-12 09:18:31.000000000 +0100
+++ unbound-1.17.1/services/listen_dnsport.c	2023-08-03 15:00:28.727393566 +0200
@@ -505,15 +505,6 @@
 		 * disabled by default for datagrams anyway, so we set
 		 * the MTU to use.
 		 */
-		if (setsockopt(s, IPPROTO_IPV6, IPV6_MTU,
-			(void*)&mtu, (socklen_t)sizeof(mtu)) < 0) {
-			log_err("setsockopt(..., IPV6_MTU, ...) failed: %s",
-				sock_strerror(errno));
-			sock_close(s);
-			*noproto = 0;
-			*inuse = 0;
-			return -1;
-		}
 #   elif defined(IPV6_USER_MTU)
 		/* As later versions of the mingw crosscompiler define
 		 * IPV6_MTU, do the same for windows but use IPV6_USER_MTU
diff -ru unbound-1.17.1.orig/smallapp/unbound-control.c unbound-1.17.1/smallapp/unbound-control.c
--- unbound-1.17.1.orig/smallapp/unbound-control.c	2023-01-12 09:18:31.000000000 +0100
+++ unbound-1.17.1/smallapp/unbound-control.c	2023-08-03 15:39:08.445948263 +0200
@@ -79,6 +79,9 @@
 #include <TargetConditionals.h>
 #endif
 
+#define SHM_R           0400    /* or S_IRUGO from <linux/stat.h> */
+#define SHM_W           0200    /* or S_IWUGO from <linux/stat.h> */
+
 static void usage(void) ATTR_NORETURN;
 static void ssl_err(const char* s) ATTR_NORETURN;
 static void ssl_path_err(const char* s, const char *path) ATTR_NORETURN;
diff -ru unbound-1.17.1.orig/util/shm_side/shm_main.c unbound-1.17.1/util/shm_side/shm_main.c
--- unbound-1.17.1.orig/util/shm_side/shm_main.c	2023-01-12 09:18:31.000000000 +0100
+++ unbound-1.17.1/util/shm_side/shm_main.c	2023-08-03 15:02:49.269123622 +0200
@@ -62,6 +62,9 @@
 #include "util/fptr_wlist.h"
 #include "util/log.h"
 
+#define SHM_R           0400    /* or S_IRUGO from <linux/stat.h> */
+#define SHM_W           0200    /* or S_IWUGO from <linux/stat.h> */
+
 #ifdef HAVE_SHMGET
 /** subtract timers and the values do not overflow or become negative */
 static void
